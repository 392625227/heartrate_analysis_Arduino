V0.30
- Added AVR Logger Version
- Added AVR Logger with Hampel filtering
- Added AVR Peak detector with error rejection and automatic scaling

V0.3.1
- Improved Clipping detection in AVR Peak Detector
- Made signal scaling slightly more sensitive to very low amplitude signals
- Increased region-of-interest buffer to prevent overflows that were sometimes generated when scaling very low amplitude signals
- Added RR-interval comparison with previous RR to increase incorrect peak detection. RR difference is not allowed to be larger than 350ms
- Tweaked moving average threshold to allow for larger variation in signal<->noise

V0.4
- Added AVR Logger with automatic amplitude scaling
- Tweaked performance
- Added ARM Logger Version (Teensy boards)
- Added ARM Logger with automatic amplitude scaling

V0.5
- Added ARM Peakfinder

V0.6
- Added ARM full USB analysis implementation

V0.6.1
- Merged Simple Logger and Simple Logger with Scaling into one with settable flag.

V0.6.2 
- Updated docs
- Cleaned full logger code
- Added link to full license in each file

V0.7
- expand peak finder to calculate time-series measurements
- Added AVR implementation of peakfinder with time-series measurements output every beat.
- Added simple logger ARM SD Version
- Merged Adaptive Threshold and Simple Logger

V0.7.1
- upgraded sampling rate on ARM peakfinder
- inserted locally compiled mapl function to optimise speed of adaptive scaling. 
- disabled peak finder thresholding pending further tuning
- make samplerate ARM peak finder settable

TODO:
- peak finders tune thresholding values.
- optimize local mapl function
- PeakfindeRMeasures: RRDiff + SqDiff rely on circular buffer, calculate DIFF and SQDIFF properly
- make samplerate AVR peak finder settable
- make timeseries analysis peak finder sample rate settable
- make sampling rate settable for ARM amplitude scaling version
- make sampling rate settable for ARM full solution version
- full version, make bpm limits settable
- full version, clipping detection and interpolation
- settable sample rate: make >1000Hz possible (implement floats to prevent int rounding errors
